/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.UsuarioController;
import java.awt.BorderLayout;
import java.awt.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.UsuarioModel;
import utils.ApplicationException;

/**
 *
 * @author juan
 */
public class UsuariosJPanel extends javax.swing.JPanel {

    private static final Logger logger = Logger.getLogger(UsuariosJPanel.class.getName());

    /**
     * Creates new form UsuariosJPanel
     */
    private JTable tableMain;
    private JScrollPane jPane;
    private final UsuarioController usuController;
    private String userAction;

    public UsuariosJPanel() {
        this.setLayout(null);

        initComponents();
//        tableMain = new JTable();
//        tableMain.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
//        tableMain.setBounds(10, 10, 100, 100);
//        this.jPane = new JScrollPane(this.tableMain);
//        add(jPane, BorderLayout.CENTER);
//
//        //setPreferredSize(new Dimension(1020, 800));
//        this.add(tableMain);

        //setLayout(new GridLayout(2, 1));
        usuController = new UsuarioController();
        //this.SetTableData(data.GetUsuarios());

        ClearFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_Menu = new javax.swing.JPanel();
        button_UserGetAll = new javax.swing.JButton();
        button_UserCreate = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Panel_DistContent = new javax.swing.JPanel();
        Panel_DataScroll = new javax.swing.JScrollPane();
        PanelData_Table = new javax.swing.JTable();
        Panel_EditRecord = new javax.swing.JPanel();
        Label_Username = new javax.swing.JLabel();
        TextEdit_Username = new javax.swing.JTextField();
        Label_Nombre = new javax.swing.JLabel();
        TextEdit_Nombre = new javax.swing.JTextField();
        Label_Apellido = new javax.swing.JLabel();
        TextEdit_Apellido = new javax.swing.JTextField();
        Label_Email = new javax.swing.JLabel();
        TextEdit_Email = new javax.swing.JTextField();
        Label_Celular = new javax.swing.JLabel();
        TextEdit_Celular = new javax.swing.JTextField();
        Label_Secret = new javax.swing.JLabel();
        TextEdit_Secret = new javax.swing.JTextField();
        TextEdit_FechaNacimiento = new javax.swing.JTextField();
        Label_FechaNacimiento = new javax.swing.JLabel();
        button_UserUpdate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        button_UserDelete = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        Panel_Menu.setLayout(new javax.swing.BoxLayout(Panel_Menu, javax.swing.BoxLayout.X_AXIS));

        button_UserGetAll.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        button_UserGetAll.setText("Obtener todos los registros");
        button_UserGetAll.setActionCommand("jb_UserGetAll");
        button_UserGetAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_UserGetAllActionPerformed(evt);
            }
        });
        Panel_Menu.add(button_UserGetAll);
        button_UserGetAll.getAccessibleContext().setAccessibleName("jb_UserGetAll");

        button_UserCreate.setBackground(new java.awt.Color(255, 102, 0));
        button_UserCreate.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        button_UserCreate.setText("Crear nuevo usuario");
        button_UserCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_UserCreateActionPerformed(evt);
            }
        });
        Panel_Menu.add(button_UserCreate);

        add(Panel_Menu, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        jLabel1.setText("Clic sobre el usuario para modificar");
        jPanel1.add(jLabel1, java.awt.BorderLayout.PAGE_START);

        Panel_DistContent.setLayout(new java.awt.GridLayout(1, 2, 20, 0));

        PanelData_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        PanelData_Table.setColumnSelectionAllowed(true);
        PanelData_Table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        PanelData_Table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        PanelData_Table.setShowHorizontalLines(true);
        PanelData_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PanelData_TableMouseClicked(evt);
            }
        });
        Panel_DataScroll.setViewportView(PanelData_Table);

        Panel_DistContent.add(Panel_DataScroll);

        Panel_EditRecord.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        Panel_EditRecord.setEnabled(false);
        Panel_EditRecord.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Label_Username.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        Label_Username.setLabelFor(TextEdit_Username);
        Label_Username.setText("Username :");
        Panel_EditRecord.add(Label_Username, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));
        Panel_EditRecord.add(TextEdit_Username, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 6, 200, -1));

        Label_Nombre.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        Label_Nombre.setLabelFor(TextEdit_Nombre);
        Label_Nombre.setText("Nombre :");
        Panel_EditRecord.add(Label_Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, -1, -1));
        Label_Nombre.getAccessibleContext().setAccessibleName("lblNombre");

        Panel_EditRecord.add(TextEdit_Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 36, 200, -1));

        Label_Apellido.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        Label_Apellido.setLabelFor(TextEdit_Apellido);
        Label_Apellido.setText("Apellido :");
        Panel_EditRecord.add(Label_Apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, -1, -1));
        Label_Apellido.getAccessibleContext().setAccessibleName("");

        Panel_EditRecord.add(TextEdit_Apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 66, 200, -1));

        Label_Email.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        Label_Email.setLabelFor(TextEdit_Email);
        Label_Email.setText("Correo :");
        Panel_EditRecord.add(Label_Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, -1, -1));
        Label_Email.getAccessibleContext().setAccessibleName("");

        Panel_EditRecord.add(TextEdit_Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 96, 200, -1));

        Label_Celular.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        Label_Celular.setLabelFor(TextEdit_Celular);
        Label_Celular.setText("Celular :");
        Panel_EditRecord.add(Label_Celular, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, -1, -1));
        Label_Celular.getAccessibleContext().setAccessibleName("");

        TextEdit_Celular.setColumns(10);
        Panel_EditRecord.add(TextEdit_Celular, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 126, 200, -1));

        Label_Secret.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        Label_Secret.setLabelFor(TextEdit_Secret);
        Label_Secret.setText("Contrase√±a :");
        Panel_EditRecord.add(Label_Secret, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, -1, -1));
        Panel_EditRecord.add(TextEdit_Secret, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 156, 200, -1));
        TextEdit_Secret.getAccessibleContext().setAccessibleName("");

        TextEdit_FechaNacimiento.setToolTipText("Fecha nacimiento");
        Panel_EditRecord.add(TextEdit_FechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 186, 200, -1));

        Label_FechaNacimiento.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        Label_FechaNacimiento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Label_FechaNacimiento.setLabelFor(TextEdit_FechaNacimiento);
        Label_FechaNacimiento.setText("F. Nacimiento :");
        Label_FechaNacimiento.setToolTipText("Fecha nacimiento");
        Panel_EditRecord.add(Label_FechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, -1, -1));

        button_UserUpdate.setText("...");
        button_UserUpdate.setActionCommand("jb_UserUpdate");
        button_UserUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_UserUpdateActionPerformed(evt);
            }
        });
        Panel_EditRecord.add(button_UserUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 200, -1));
        button_UserUpdate.getAccessibleContext().setAccessibleName("jb_UserUpdate");

        jLabel2.setForeground(java.awt.Color.black);
        jLabel2.setText("formato dd/mm/aaaa (20/01/2001)");
        Panel_EditRecord.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, -1, -1));

        button_UserDelete.setText("Eliminar registro");
        button_UserDelete.setActionCommand("jb_UserDelete");
        button_UserDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_UserDeleteActionPerformed(evt);
            }
        });
        Panel_EditRecord.add(button_UserDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 200, -1));

        Panel_DistContent.add(Panel_EditRecord);

        jPanel1.add(Panel_DistContent, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void button_UserGetAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_UserGetAllActionPerformed
        // TODO add your handling code here:
        //showMessageDialog(null, "Mensaje corto", "Titulo", 2);
        try {
            ClearFields();
            this.SetTableData(usuController.GetUsuarios());
        } catch (ApplicationException ex) {
            //Logger.getLogger(UsuariosJPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getFullMessage(), "Warning", 2);
        }

    }//GEN-LAST:event_button_UserGetAllActionPerformed

    private void PanelData_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PanelData_TableMouseClicked
        // TODO add your handling code here:
        //logger.log(Level.INFO, evt.paramString());
        var username = this.PanelData_Table.getModel().getValueAt(this.PanelData_Table.getSelectedRow(), 0).toString();
        this.FillUserData(username);
    }//GEN-LAST:event_PanelData_TableMouseClicked

    private void button_UserCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_UserCreateActionPerformed
        // TODO add your handling code here:
        this.NewUserData();
    }//GEN-LAST:event_button_UserCreateActionPerformed

    private void button_UserUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_UserUpdateActionPerformed
        // TODO add your handling code here:
        if ("UP".equals(userAction)) {
            UpdateUser();
        } else if ("CR".equals(userAction)) {
            CreateUser();
        }
    }//GEN-LAST:event_button_UserUpdateActionPerformed

    private void button_UserDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_UserDeleteActionPerformed
        // TODO add your handling code here:
        DeleteUser();
    }//GEN-LAST:event_button_UserDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label_Apellido;
    private javax.swing.JLabel Label_Celular;
    private javax.swing.JLabel Label_Email;
    private javax.swing.JLabel Label_FechaNacimiento;
    private javax.swing.JLabel Label_Nombre;
    private javax.swing.JLabel Label_Secret;
    private javax.swing.JLabel Label_Username;
    private javax.swing.JTable PanelData_Table;
    private javax.swing.JScrollPane Panel_DataScroll;
    private javax.swing.JPanel Panel_DistContent;
    private javax.swing.JPanel Panel_EditRecord;
    private javax.swing.JPanel Panel_Menu;
    private javax.swing.JTextField TextEdit_Apellido;
    private javax.swing.JTextField TextEdit_Celular;
    private javax.swing.JTextField TextEdit_Email;
    private javax.swing.JTextField TextEdit_FechaNacimiento;
    private javax.swing.JTextField TextEdit_Nombre;
    private javax.swing.JTextField TextEdit_Secret;
    private javax.swing.JTextField TextEdit_Username;
    private javax.swing.JButton button_UserCreate;
    private javax.swing.JButton button_UserDelete;
    private javax.swing.JButton button_UserGetAll;
    private javax.swing.JButton button_UserUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public void SetTableData(ArrayList<UsuarioModel> usuariosData) {
        String[] headers = {"Usuario", "Nombre completo", "Correo", "Celular"};
        this.PanelData_Table.removeAll();
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.setColumnIdentifiers(headers);
        this.PanelData_Table.setModel(tableModel);
        for (int i = 0; i < usuariosData.size(); i++) {
            tableModel.addRow(usuariosData.get(i).toArray());
        }
    }

    private void NewUserData() {
        ClearFields();
        userAction = "CR";
        button_UserUpdate.setText("Grabar nuevo usuario");
        SetEditableFields(true);
        button_UserDelete.setVisible(false);
        TextEdit_Username.setFocusable(true);
        TextEdit_Username.requestFocusInWindow();
    }

    private void CreateUser() {
        int question = JOptionPane.showConfirmDialog(null, "Realmente ¬øDesea crear un nuevo usuario?");
        //System.out.println(question);
        switch (question) {
            case 0: 
                try {
                var res = usuController.CrearUsuario(CreateUserModelFromForm());
                if (res) {
                    button_UserGetAll.doClick();
                    //ClearFields();
                    JOptionPane.showMessageDialog(null, String.format("Usuario creado exitosamente.%s por favor actualice la lista de registros", System.lineSeparator()), "Notificaci√≥n", 1);
                }
            } catch (ApplicationException ex) {
                logger.log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getFullMessage(), "Warning", 2);
            }
            break;

            case 1:
                break;
            case 2:
                break;
        }
    }

    private void FillUserData(String username) {
        try {
            ClearFields();

            UsuarioModel usuario = usuController.GetUsuario(username);

            TextEdit_Username.setText(usuario.getUsername());
            TextEdit_Nombre.setText(usuario.getNombre());
            TextEdit_Apellido.setText(usuario.getApellido());
            TextEdit_Email.setText(usuario.getEmail());
            TextEdit_Celular.setText(usuario.getCelular());
            TextEdit_Secret.setText(usuario.getSecret());
            TextEdit_FechaNacimiento.setText(FormatDateToString(usuario.getFechanacimiento()));

            userAction = "UP";
            SetEditableFields(true);
            TextEdit_Username.setEditable(false);
            TextEdit_Nombre.requestFocusInWindow();

            button_UserUpdate.setText("Actualizar usuario");
            button_UserUpdate.setEnabled(true);
            button_UserDelete.setVisible(true);
        } catch (ApplicationException ex) {
            //Logger.getLogger(UsuariosJPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getFullMessage(), "Warning", 2);
        }
    }

    private void UpdateUser() {
        int question = JOptionPane.showConfirmDialog(null, "Realmente ¬øDesea actualizar los datos del usuario?");
        //System.out.println(question);
        switch (question) {
            case 0: 
                try {
                var res = usuController.ActualizarUsuario(CreateUserModelFromForm());
                if (res) {
                    button_UserGetAll.doClick();
                    //ClearFields();
                    JOptionPane.showMessageDialog(null, String.format("Usuario actualizado exitosamente.%s por favor actualice la lista de registros", System.lineSeparator()), "Notificaci√≥n", 1);
                }
            } catch (ApplicationException ex) {
                logger.log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getFullMessage(), "Warning", 2);
            }
            break;

            case 1:
                break;
            case 2:
                break;
        }
    }

    private void DeleteUser() {
        var userData = CreateUserModelFromForm();

        int question = JOptionPane.showConfirmDialog(null, String.format("Realmente ¬øDesea eliminar el usuario [%s]?", userData.getUsername()));

        //System.out.println(question);
        switch (question) {
            case 0:
                try {
                var res = usuController.EliminarUsuario(userData);
                if (res) {
                    button_UserGetAll.doClick();
                    //ClearFields();
                    JOptionPane.showMessageDialog(null, String.format("Usuario eliminado exitosamente.%s por favor actualice la lista de registros", System.lineSeparator()), "Notificaci√≥n", 1);
                }
            } catch (ApplicationException ex) {
                logger.log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getFullMessage(), "Warning", 2);
            }
        }
    }

    private void ClearFields() {
        userAction = "";
        TextEdit_Username.setText("");
        TextEdit_Nombre.setText("");
        TextEdit_Apellido.setText("");
        TextEdit_Email.setText("");
        TextEdit_Celular.setText("");
        TextEdit_Secret.setText("");
        TextEdit_FechaNacimiento.setText("");
        SetEditableFields(false);
    }

    private void SetEditableFields(boolean action) {
        TextEdit_Username.setEditable(action);
        TextEdit_Nombre.setEditable(action);
        TextEdit_Apellido.setEditable(action);
        TextEdit_Email.setEditable(action);
        TextEdit_Celular.setEditable(action);
        TextEdit_Secret.setEditable(action);
        TextEdit_FechaNacimiento.setEditable(action);
        button_UserUpdate.setEnabled(action);
        button_UserDelete.setVisible(action);
    }

    private UsuarioModel CreateUserModelFromForm() {
        UsuarioModel userModel = new UsuarioModel(
            TextEdit_Username.getText(),
            TextEdit_Nombre.getText(),
            TextEdit_Apellido.getText(),
            TextEdit_Email.getText(),
            TextEdit_Celular.getText(),
            TextEdit_Secret.getText(),
            FormatStringToDate(TextEdit_FechaNacimiento.getText())
        );
        return userModel;
    }

    private String FormatDateToString(Date fecha) {
        if (fecha == null) {
            return "";
        }

        String pattern = "dd/MM/yyyy";
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
        String formatedDate = simpleDateFormat.format(fecha);
        //System.out.println(date);
        return formatedDate;
    }

    private Date FormatStringToDate(String fecha) {
        if (fecha == null) {
            return null;
        }

        String pattern = "dd/MM/yyyy";
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
        Date formatedDate;
        try {
            formatedDate = simpleDateFormat.parse(fecha);
        } catch (ParseException ex) {
            logger.log(Level.SEVERE, null, ex);
            formatedDate = null;
        }
        //System.out.println(date);
        return formatedDate;
    }

}
